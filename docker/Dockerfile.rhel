ARG DISTRO=rockylinux
ARG VERSION=8
FROM ${DISTRO}:${VERSION}

ENV HOME /root
ENV SHELL /bin/bash
ENV BASH_ENV /etc/bash.bashrc
ENV DEBIAN_FRONTEND noninteractive

WORKDIR /tmp
SHELL [ "/bin/bash", "-c" ]

ENV PATH /usr/local/bin:${PATH}

RUN yum update -y && \
    yum groupinstall -y "Development Tools" && \
    yum install -y epel-release && \
    yum install -y --allowerasing curl dpkg-devel numactl-devel openmpi-devel papi-devel python3-pip wget zlib-devel && \
    yum clean all && \
    python3 -m pip install 'cmake==3.21.4'

ARG ROCM_VERSION=0.0
ARG AMDGPU_RPM=5.4/rhel/8.7/amdgpu-install-5.4.50400-1.el8.noarch.rpm

RUN if [ "${ROCM_VERSION}" != "0.0" ]; then \
        yum update -y && \
        dnf -y --enablerepo=powertools install perl-File-BaseDir && \
        yum install -y https://repo.radeon.com/amdgpu-install/${AMDGPU_RPM} && \
        amdgpu-install --usecase=rocm,hip,hiplibsdk --no-dkms --skip-broken -y && \
        yum install -y rocm-hip-sdk rocm-smi-lib roctracer-dev rocprofiler-dev && \
        yum update -y && \
        yum clean all; \
    fi

ARG PYTHON_VERSIONS="6 7 8 9 10"

RUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh && \
    bash miniconda.sh -b -p /opt/conda && \
    export PATH="/opt/conda/bin:${PATH}" && \
    conda config --set always_yes yes --set changeps1 no && \
    conda update -c defaults -n base conda && \
    for i in ${PYTHON_VERSIONS}; do conda create -n py3.${i} -c defaults python=3.${i} pip; done && \
    conda clean -a -y && \
    conda init

RUN if [ "${ROCM_VERSION}" != "0.0" ]; then ln -sf /opt/rocm-${ROCM_VERSION}* /opt/rocm; fi

WORKDIR /home
SHELL [ "/bin/bash", "--login", "-c" ]
COPY ./entrypoint-centos.sh /docker-entrypoint.sh
ENTRYPOINT [ "/docker-entrypoint.sh" ]
